<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">
        
        
        
        <!-- <record id="work_entry_type_attendance" model="hr.work.entry.type">
            <field name="name">Asistencia</field>
            <field name="code">WORK100</field>
            <field name="is_leave">True</field>
            <field name="color">5</field>
            <field name="round_days">Sin Redondeo</field>
            <field name="round_days_type">Abajo</field>
        </record> -->

        <record id="hr_estructura_tipo_mensual" model="hr.payroll.structure.type">
            <field name="name">Base (MENSUAL)</field>
            <field name="wage_type">monthly</field>
            <field name="default_schedule_pay">bi-weekly</field>
            <field name="country_id" eval="False"/>
        </record>

        <record id="eu_estructura_vacations" model="hr.payroll.structure">
            <field name="name">Vacaciones</field>
            <field name="schedule_pay">annually</field>
            <field name="journal_id" search="[('code', '=', 'OV1')]"/>
            <field name="use_worked_day_lines">False</field>
            <field name="struct_category">vacation</field>
            <field name="code">VACATION</field>
            <field name="type_id" ref="hr_estructura_tipo_mensual"/>
            <!-- <field name="regular_pay" eval="True"/> -->
            <field name="country_id" eval="False"/>
        </record>

        <record id="eu_estructura_vacations_no_disfrutadas" model="hr.payroll.structure">
            <field name="name">Vacaciones No Disfrutadas</field>
            <field name="schedule_pay">annually</field>
            <field name="journal_id" search="[('code', '=', 'OV1')]"/>
            <field name="use_worked_day_lines">False</field>
            <field name="struct_category">vacation</field>
            <field name="code">VAC_LIQ</field>
            <field name="type_id" ref="hr_estructura_tipo_mensual"/>
            <!-- <field name="regular_pay" eval="True"/> -->
            <field name="country_id" eval="False"/>
        </record>

            <!-- Reglas salariales -->
            <!-- Vacaiones -->
        <record id="hr_salary_rule_479_79d28cc8" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
if contract.is_variable_wage:
    result_qty= payslip.company_id.dias_vac_base
    result= payslip.salario_promedio
else:
    False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty=payslip.company_id.dias_vac_base
if contract.is_variable_wage:
    result= payslip.salario_promedio
else:
    result=payslip.sal_diario</field>
            <field name="code">REMVACA</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">VACACIONES REMUNERADAS ART. 190 LOTTT</field>
            <field name="sequence" eval="1"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_479_ffd28cc8" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
if contract.is_variable_wage:
    result_qty= payslip.company_id.dias_vac_base
    result= payslip.salario_promedio
else:
    False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty=payslip.company_id.dias_vac_base
if contract.is_variable_wage:
    result= payslip.salario_promedio
else:
    result=payslip.sal_diario</field>
            <field name="code">REMVACA</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">VACACIONES REMUNERADAS ART. 190 LOTTT</field>
            <field name="sequence" eval="1"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_492_37acc019" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty=payslip.company_id.dias_vac_base
if contract.is_variable_wage:
    result=payslip.salario_promedio
else:
    result=payslip.sal_diario</field>
            <field name="code">BDVACA</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">BONO VACACIONAL ART. 192 LOTTT</field>
            <field name="sequence" eval="3"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>   
        
        <record id="hr_salary_rule_492_37acc0f0" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty=payslip.company_id.dias_vac_base
if contract.is_variable_wage:
    result=payslip.salario_promedio
else:
    result=payslip.sal_diario</field>
            <field name="code">BDVACA</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">BONO VACACIONAL ART. 192 LOTTT</field>
            <field name="sequence" eval="3"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>   

        <record id="hr_salary_rule_492_37acc019" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.dias_bono>0 and contract.is_variable_wage and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.ano_antig>=2 and employee.dias_bono &lt;=16:
    result_qty= employee.dias_bono / 2
elif employee.ano_antig>=2 and employee.dias_bono >16:
    result_qty= 15
result=payslip.salario_promedio
            </field>
            <field name="code">REMANTIG</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">DIAS ADICIONALES ART. 190 LOTTT</field>
            <field name="sequence" eval="2"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_492_371fc019" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.dias_bono>0 and contract.is_variable_wage and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.ano_antig>=2 and employee.dias_bono &lt;=16:
    result_qty= employee.dias_bono / 2
elif employee.ano_antig>=2 and employee.dias_bono >16:
    result_qty= 15
result=payslip.salario_promedio
            </field>
            <field name="code">REMANTIG</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">DIAS ADICIONALES ART. 190 LOTTT</field>
            <field name="sequence" eval="2"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_498_a32e3375" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.dias_bono>0 and contract.is_variable_wage and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.ano_antig>=2 and employee.dias_bono &lt;=16:
    result_qty= employee.dias_bono / 2
elif employee.ano_antig>=2 and employee.dias_bono >16:
    result_qty= 15
result=payslip.salario_promedio
            </field>
            <field name="code">REMANTIG</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">DIAS ADICIONALES ART. 190 LOTTT</field>
            <field name="sequence" eval="2"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_498_a32e3c75" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.dias_bono>0 and contract.is_variable_wage and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.ano_antig>=2 and employee.dias_bono &lt;=16:
    result_qty= employee.dias_bono / 2
elif employee.ano_antig>=2 and employee.dias_bono >16:
    result_qty= 15
result=payslip.salario_promedio
            </field>
            <field name="code">REMANTIG</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">DIAS ADICIONALES ART. 190 LOTTT</field>
            <field name="sequence" eval="2"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_502_75ac0eaf" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.dias_bono>0 and not contract.is_variable_wage and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.ano_antig>=2 and employee.dias_bono &lt;=16:
    result_qty= employee.dias_bono / 2
elif employee.ano_antig>=2 and employee.dias_bono >16:
    result_qty= 15
result=payslip.sal_diario</field>
            <field name="code">REMANTIG</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">DIAS ADICIONALES ART. 190 LOTTT</field>
            <field name="sequence" eval="2"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_502_75ac0dcf" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.dias_bono>0 and not contract.is_variable_wage and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.ano_antig>=2 and employee.dias_bono &lt;=16:
    result_qty= employee.dias_bono / 2
elif employee.ano_antig>=2 and employee.dias_bono >16:
    result_qty= 15
result=payslip.sal_diario</field>
            <field name="code">REMANTIG</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">DIAS ADICIONALES ART. 190 LOTTT</field>
            <field name="sequence" eval="2"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_316_75ca0eaf" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if inputs.FINAN and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    if inputs.FINAN.amount>0:
        result = True
    else:
        result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if inputs.FINAN:
    if inputs.FINAN.amount>0:
        result = inputs.FINAN.amount
    else:
        result = False
else:
    result = False</field>
            <field name="code">PRESTAMO</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="name">PRESTAMO</field>
            <field name="sequence" eval="15"/>
            <field name="account_credit" ref="eu_reglas_salariales.account_activa_account_11231010041" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_316_75cc0eaf" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if inputs.FINAN and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    if inputs.FINAN.amount>0:
        result = True
    else:
        result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if inputs.FINAN:
    if inputs.FINAN.amount>0:
        result = inputs.FINAN.amount
    else:
        result = False
else:
    result = False</field>
            <field name="code">PRESTAMO</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="name">PRESTAMO</field>
            <field name="sequence" eval="15"/>
            <field name="account_credit" ref="eu_reglas_salariales.account_activa_account_11231010041" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>
        
        <record id="hr_salary_rule_503_4008b8b3" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.dias_bono>0 and not contract.is_variable_wage and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.ano_antig>=2 and employee.dias_bono &lt;=16:
    result_qty= employee.dias_bono / 2
elif employee.ano_antig>=2 and employee.dias_bono >16:
    result_qty= 15
result=payslip.sal_diario</field>
            <field name="code">BDANTIG</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">DIAS ADICIONAL BONO VACACIONAL ART. 192 LOTTT</field>
            <field name="sequence" eval="4"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_503_42d8b8b3" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.dias_bono>0 and not contract.is_variable_wage and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.ano_antig>=2 and employee.dias_bono &lt;=16:
    result_qty= employee.dias_bono / 2
elif employee.ano_antig>=2 and employee.dias_bono >16:
    result_qty= 15
result=payslip.sal_diario</field>
            <field name="code">BDANTIG</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">DIAS ADICIONAL BONO VACACIONAL ART. 192 LOTTT</field>
            <field name="sequence" eval="4"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_507_f7b5880e" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.dias_bono>0 and contract.is_variable_wage and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.ano_antig>=2 and employee.dias_bono &lt;=16:
    result_qty= employee.dias_bono / 2
elif employee.ano_antig>=2 and employee.dias_bono >16:
    result_qty= 15
result=payslip.salario_promedio</field>
            <field name="code">BDANTIG</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">DIAS ADICIONAL BONO VACACIONAL ART. 192 LOTTT</field>
            <field name="sequence" eval="4"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_507_f7b5770e" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.dias_bono>0 and contract.is_variable_wage and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.ano_antig>=2 and employee.dias_bono &lt;=16:
    result_qty= employee.dias_bono / 2
elif employee.ano_antig>=2 and employee.dias_bono >16:
    result_qty= 15
result=payslip.salario_promedio</field>
            <field name="code">BDANTIG</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">DIAS ADICIONAL BONO VACACIONAL ART. 192 LOTTT</field>
            <field name="sequence" eval="4"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_515_70a8af74" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">slip=employee.slip_ids.filtered(lambda x: x.date_to.year==payslip.date_from.year and not x.is_vacation and not x.is_utility and not x.is_anihilation and x.type_struct_category in ['normal','especial'])
if slip and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">slip=employee.slip_ids.filtered(lambda x: x.date_to.year==payslip.date_from.year and not x.is_vacation and not x.is_utility and not x.is_anihilation and x.type_struct_category in ['normal','especial'])
sal=sum(sum(y.total for y in x.line_ids.filtered(lambda line: line.code == 'PROV_VAC')) for x in slip)
result=categories.Bono - sal</field>
            <field name="code">dif_provv</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_provi"/>
            <field name="name">DIFERENCIAL DE PROVISIONES</field>
            <field name="sequence" eval="16"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="account_debit" ref="eu_reglas_salariales.account_activa_account_57115543441" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_515_71c8af74" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">slip=employee.slip_ids.filtered(lambda x: x.date_to.year==payslip.date_from.year and not x.is_vacation and not x.is_utility and not x.is_anihilation and x.type_struct_category in ['normal','especial'])
if slip and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">slip=employee.slip_ids.filtered(lambda x: x.date_to.year==payslip.date_from.year and not x.is_vacation and not x.is_utility and not x.is_anihilation and x.type_struct_category in ['normal','especial'])
sal=sum(sum(y.total for y in x.line_ids.filtered(lambda line: line.code == 'PROV_VAC')) for x in slip)
result=categories.Bono - sal</field>
            <field name="code">dif_provv</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_provi"/>
            <field name="name">DIFERENCIAL DE PROVISIONES</field>
            <field name="sequence" eval="16"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="account_debit" ref="eu_reglas_salariales.account_activa_account_57115543441" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_527_22dbfdcb" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.autoriza_retencion and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result=(categories.Bono)*4/100</field>
            <field name="code">S.S.O</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="name">S.S.O</field>
            <field name="sequence" eval="8"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501010" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_527_22d5fjcb" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.autoriza_retencion and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result=(categories.Bono)*4/100</field>
            <field name="code">S.S.O</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="name">S.S.O</field>
            <field name="sequence" eval="8"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501010" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_532_79ca4391" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.autoriza_retencion and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result=(categories.Bono)*0.5/100</field>
            <field name="code">R.P.E</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="name">R.P.E</field>
            <field name="sequence" eval="9"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501011" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_522_79cf4391" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.autoriza_retencion and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result=(categories.Bono)*0.5/100</field>
            <field name="code">R.P.E</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="name">R.P.E</field>
            <field name="sequence" eval="9"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501011" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_537_57ed2183" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.autoriza_retencion and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result= round((categories.Bono)*1/100,2)</field>
            <field name="code">F.A.O.V</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="name">F.A.O.V</field>
            <field name="sequence" eval="10"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501010" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_557_57ed21d3" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.autoriza_retencion and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result= round((categories.Bono)*1/100,2)</field>
            <field name="code">F.A.O.V</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="name">F.A.O.V</field>
            <field name="sequence" eval="10"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501010" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_552_4d8b43bf" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_empresa_lph:
    result = (categories.Bono * (employee.company_id.por_empresa_lph / 100) )
else:
    result = False
            </field>
            <field name="name">F.A.O.V. EMPRESA</field>
            <field name="category_id" ref="hr_payroll.COMP"/>
            <field name="code">F.A.O.V.-EMPRESA</field>
            <field name="sequence" eval="14"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210402001" />
            <field name="account_debit" ref="eu_reglas_salariales.account_activa_account_57115543441" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_652_4j8b43bf" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_empresa_lph:
    result = (categories.Bono * (employee.company_id.por_empresa_lph / 100) )
else:
    result = False
            </field>
            <field name="name">F.A.O.V. EMPRESA</field>
            <field name="category_id" ref="hr_payroll.COMP"/>
            <field name="code">F.A.O.V.-EMPRESA</field>
            <field name="sequence" eval="14"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210402001" />
            <field name="account_debit" ref="eu_reglas_salariales.account_activa_account_57115543441" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_482_208cf784" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
else:
    result = False

            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty= ((payslip.date_to - payslip.date_from).days+1)
result = (contract.cesta_ticket / 30)
            </field>
            <field name="name">BENEFICIO DE ALIMENTACIÓN</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="code">cesta_ticket</field>
            <field name="sequence" eval="6"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_610101003" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_492_208cf884" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
else:
    result = False

            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty= ((payslip.date_to - payslip.date_from).days+1)
result = (contract.cesta_ticket / 30)
            </field>
            <field name="name">BENEFICIO DE ALIMENTACIÓN</field>
            <field name="category_id" ref="hr_payroll.ALW"/>
            <field name="code">cesta_ticket</field>
            <field name="sequence" eval="6"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_610101003" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_492_37acc019" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty=payslip.company_id.dias_vac_base
if contract.is_variable_wage:
    result=payslip.salario_promedio
else:
    result=payslip.sal_diario
            </field>
            <field name="name">BONO VACACIONAL ART. 192 LOTTT</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="code">BDVACA</field>
            <field name="sequence" eval="3"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_492_27acc029" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty=payslip.company_id.dias_vac_base
if contract.is_variable_wage:
    result=payslip.salario_promedio
else:
    result=payslip.sal_diario
            </field>
            <field name="name">BONO VACACIONAL ART. 192 LOTTT</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="code">BDVACA</field>
            <field name="sequence" eval="3"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_510_0ebdd988" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if inputs.feriados:
    result_qty=payslip.dias_feriados + inputs.feriados.amount
else:
    result_qty=payslip.dias_feriados
result=payslip.sal_diario
            </field>
            <field name="name">FERIADO, DESCANSO VACACIONAL</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="code">BDFERI</field>
            <field name="sequence" eval="7"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_510_0ebff988" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if inputs.feriados:
    result_qty=payslip.dias_feriados + inputs.feriados.amount
else:
    result_qty=payslip.dias_feriados
result=payslip.sal_diario
            </field>
            <field name="name">FERIADO, DESCANSO VACACIONAL</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="code">BDFERI</field>
            <field name="sequence" eval="7"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_551_8631629f" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_riesgo:
    result = ((((categories.Bono ))*((employee.company_id.por_riesgo / 100))))
else:
    result = False
            </field>
            <field name="name">S.S.O EMPRESA</field>
            <field name="category_id" ref="hr_payroll.COMP"/>
            <field name="code">SSO-EMPRESA</field>
            <field name="sequence" eval="12"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210402001" />
            <field name="account_debit" ref="eu_reglas_salariales.account_activa_account_57115543441" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_551_f63c629f" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_riesgo:
    result = ((((categories.Bono ))*((employee.company_id.por_riesgo / 100))))
else:
    result = False
            </field>
            <field name="name">S.S.O EMPRESA</field>
            <field name="category_id" ref="hr_payroll.COMP"/>
            <field name="code">SSO-EMPRESA</field>
            <field name="sequence" eval="12"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210402001" />
            <field name="account_debit" ref="eu_reglas_salariales.account_activa_account_57115543441" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_553_ff735bd9" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_empresa_rpe:
    result = ((((categories.Bono)) * ((employee.company_id.por_empresa_rpe / 100))))
else:
    result = False
            </field>
            <field name="name">R.P.E EMPRESA</field>
            <field name="category_id" ref="hr_payroll.COMP"/>
            <field name="code">RPE-EMPRESA</field>
            <field name="sequence" eval="13"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210402002" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <record id="hr_salary_rule_553_ff7c5bd9" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_empresa_rpe:
    result = ((((categories.Bono)) * ((employee.company_id.por_empresa_rpe / 100))))
else:
    result = False
            </field>
            <field name="name">R.P.E EMPRESA</field>
            <field name="category_id" ref="hr_payroll.COMP"/>
            <field name="code">RPE-EMPRESA</field>
            <field name="sequence" eval="13"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210402002" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations"/>
        </record>

        <!-- vaciones no disfrutadas -->

        <record id="hr_salary_rule_538_33a2852f" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result= categories.BASIC * ((employee.company_id.por_aporte_sso / 100))</field>
            <field name="code">RET_SSO_LIQ</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="name">RETENCIÓN S.S.O.</field>
            <field name="sequence" eval="8"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_vacations_no_disfrutadas"/>
        </record>

        <record id="hr_salary_rule_538_33b28f2f" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result= categories.BASIC * ((employee.company_id.por_aporte_sso / 100))</field>
            <field name="code">RET_SSO_LIQ</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="name">RETENCIÓN S.S.O.</field>
            <field name="sequence" eval="8"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_vacations_no_disfrutadas"/>
        </record>

        <record id="hr_salary_rule_546_08891da5" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result= categories.BASIC * 1 / 100</field>
            <field name="name">RETENCIÓN FAOV</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">RET_FAOV_LIQ</field>
            <field name="sequence" eval="9"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_vacations_no_disfrutadas"/>
        </record>

        <record id="hr_salary_rule_546_0kk91da5" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result= categories.BASIC * 1 / 100</field>
            <field name="name">RETENCIÓN FAOV</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">RET_FAOV_LIQ</field>
            <field name="sequence" eval="9"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_vacations_no_disfrutadas"/>
        </record>

        <record id="hr_salary_rule_505_3d13b798" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.dias_bono>0 and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty=employee.dias_bono
result=payslip.sal_diario</field>
            <field name="code">BDANTIG</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">DIAS ADICIONAL BONO VACACIONAL ART. 192 LOTTT</field>
            <field name="sequence" eval="4"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations_no_disfrutadas"/>
        </record>

        <record id="hr_salary_rule_515_3d1fb798" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.dias_bono>0 and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty=employee.dias_bono
result=payslip.sal_diario</field>
            <field name="code">BDANTIG</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">DIAS ADICIONAL BONO VACACIONAL ART. 192 LOTTT</field>
            <field name="sequence" eval="4"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501006" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210502006" />
            <field name="struct_id" ref="eu_estructura_vacations_no_disfrutadas"/>
        </record>

        <record id="hr_salary_rule_500_87f6c20b" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.dias_bono >0 and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty=employee.dias_bono
result=payslip.sal_diario</field>
            <field name="code">REMANTIG</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">DIAS ADICIONALES VACACIONES NO DISFRUTADAS ART. 190 LOTTT</field>
            <field name="sequence" eval="2"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_vacations_no_disfrutadas"/>
        </record>

        <record id="hr_salary_rule_500_87ccc20b" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.dias_bono >0 and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty=employee.dias_bono
result=payslip.sal_diario</field>
            <field name="code">REMANTIG</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">DIAS ADICIONALES VACACIONES NO DISFRUTADAS ART. 190 LOTTT</field>
            <field name="sequence" eval="2"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_vacations_no_disfrutadas"/>
        </record>

        <record id="hr_salary_rule_493_0640d30d" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.offset_vacaciones &lt;0:
    result_qty=(payslip.company_id.dias_vac_base / 360 * (employee.ano_antig * 360 + employee.mes_antig * 30 + employee.dias_antig)) - SALDO
else:
    result_qty= ((payslip.company_id.dias_vac_base / 360) * (employee.ano_antig * 360 + employee.mes_antig * 30 + employee.dias_antig))
result= (payslip.sal_diario)</field>
            <field name="code">BDVACA</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">BONO VACACIONAL ART. 192 LOTTT</field>
            <field name="sequence" eval="3"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_vacations_no_disfrutadas"/>
        </record>

        <record id="hr_salary_rule_493_0aa0d30d" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.offset_vacaciones &lt;0:
    result_qty=(payslip.company_id.dias_vac_base / 360 * (employee.ano_antig * 360 + employee.mes_antig * 30 + employee.dias_antig)) - SALDO
else:
    result_qty= ((payslip.company_id.dias_vac_base / 360) * (employee.ano_antig * 360 + employee.mes_antig * 30 + employee.dias_antig))
result= (payslip.sal_diario)</field>
            <field name="code">BDVACA</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">BONO VACACIONAL ART. 192 LOTTT</field>
            <field name="sequence" eval="3"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_vacations_no_disfrutadas"/>
        </record>

        <record id="hr_salary_rule_666_691d7dbd" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.offset_vacaciones &lt;0 and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result= (payslip.company_id.dias_vac_base * (employee.offset_vacaciones * (-1))) + ((employee.dias_bono) - 1)</field>
            <field name="code">SALDO</field>
            <field name="category_id" ref="hr_payroll.NET"/>
            <field name="name">SALDO DE VACACIONES</field>
            <field name="sequence" eval="4"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_vacations_no_disfrutadas"/>
        </record>

        <record id="hr_salary_rule_666_600d7dbd" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.offset_vacaciones &lt;0 and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result= (payslip.company_id.dias_vac_base * (employee.offset_vacaciones * (-1))) + ((employee.dias_bono) - 1)</field>
            <field name="code">SALDO</field>
            <field name="category_id" ref="hr_payroll.NET"/>
            <field name="name">SALDO DE VACACIONES</field>
            <field name="sequence" eval="4"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_vacations_no_disfrutadas"/>
        </record>

        <record id="hr_salary_rule_188_691d7dcd" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty=payslip.company_id.dias_vac_base / 360 * (employee.ano_antig * 360 + employee.mes_antig * 30 + employee.dias_antig)
result=(payslip.sal_diario)
            </field>
            <field name="code">REMVACA</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">VACACIONES ART.190 LOTTT</field>
            <field name="sequence" eval="1"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_vacations_no_disfrutadas"/>
        </record>

        <record id="hr_salary_rule_188_691d7ffd" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty=payslip.company_id.dias_vac_base / 360 * (employee.ano_antig * 360 + employee.mes_antig * 30 + employee.dias_antig)
result=(payslip.sal_diario)
            </field>
            <field name="code">REMVACA</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">VACACIONES ART.190 LOTTT</field>
            <field name="sequence" eval="1"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_vacations_no_disfrutadas"/>
        </record>

        <record id="hr_salary_rule_192_09ad7dcd" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty=payslip.dias_feriados
result=payslip.sal_diario
            </field>
            <field name="code">BDFERI</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">DIAS FERIADOS</field>
            <field name="sequence" eval="5"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_vacations_no_disfrutadas"/>
        </record>

        <record id="hr_salary_rule_192_09ad8fcd" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_vacation and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty=payslip.dias_feriados
result=payslip.sal_diario
            </field>
            <field name="code">BDFERI</field>
            <field name="category_id" ref="eu_reglas_salariales.hr_bono"/>
            <field name="name">DIAS FERIADOS</field>
            <field name="sequence" eval="5"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_vacations_no_disfrutadas"/>
        </record>
        
    </data>
</odoo>
