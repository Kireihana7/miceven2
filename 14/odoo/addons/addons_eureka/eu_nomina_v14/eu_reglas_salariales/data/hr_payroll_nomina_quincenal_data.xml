<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data noupdate="1">
        <record id="hr_estructura_tipo_mensual" model="hr.payroll.structure.type">
            <field name="name">Base (MENSUAL)</field>
            <field name="wage_type">monthly</field>
            <field name="default_schedule_pay">bi-weekly</field>
            <field name="country_id" eval="False"/>
        </record>

        <record id="eu_estructura_nomina_quincenal" model="hr.payroll.structure">
            <field name="name">NÃ³mina Quincenal</field>
            <field name="schedule_pay">annually</field>
            <field name="journal_id" search="[('code', '=', 'OV1')]"/>
            <field name="use_worked_day_lines">True</field>
            <field name="auto_post">True</field>
            <field name="struct_category">normal</field>
            <field name="code">NOM_QNAL</field>
            <field name="type_id" ref="hr_estructura_tipo_mensual"/>
            <!-- <field name="regular_pay" eval="True"/> -->
            <field name="country_id" eval="False"/>
        </record>

        <record id="hr_salary_rule_651_832e4b84" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if worked_days.P_REM and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if worked_days:
    result_qty=worked_days.P_REM.number_of_days
else:
    result_qty=worked_days.P_REM
result= payslip.sal_diario</field>
            <field name="name">PERMISO REMUNERADO</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">PERM_REM</field>
            <field name="sequence" eval="4"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_651_832e4b00" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if worked_days.P_REM and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if worked_days:
    result_qty=worked_days.P_REM.number_of_days
else:
    result_qty=worked_days.P_REM
result= payslip.sal_diario</field>
            <field name="name">PERMISO REMUNERADO</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">PERM_REM</field>
            <field name="sequence" eval="4"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_650_0f700670" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if worked_days.LEAVE120 and worked_days.LEAVE120.number_of_days >0 and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if worked_days:
    result_qty=worked_days.LEAVE120.number_of_days
else:
    result_qty=worked_days.LEAVE120
result= payslip.sal_diario</field>
            <field name="name">PERMISO NO REMUNERADO</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">P_NOREM</field>
            <field name="sequence" eval="11"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_650_0f7c0671" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if worked_days.LEAVE120 and worked_days.LEAVE120.number_of_days >0 and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if worked_days:
    result_qty=worked_days.LEAVE120.number_of_days
else:
    result_qty=worked_days.LEAVE120
result= payslip.sal_diario</field>
            <field name="name">PERMISO NO REMUNERADO</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">P_NOREM</field>
            <field name="sequence" eval="11"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_652_780fcf83" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO') and worked_days.DESCANSO and worked_days.DESCANSO.number_of_days>0:
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if worked_days.DESCANSO:
    if ((payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days) > 0:
        result= categories.BASIC / ((payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days)
    else:
        result=payslip.sal_diario
else:
    result_qty= worked_days.DESCANSO
    if ((payslip.date_to - payslip.date_from).days + 1 ) > 0:
        result= categories.BASIC / ((payslip.date_to - payslip.date_from).days + 1 )
    else:
        result=payslip.sal_diario</field>
            <field name="name">DIA DE DESCANSO</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">DDES</field>
            <field name="sequence" eval="12"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_652_00dfcf83" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO') and worked_days.DESCANSO and worked_days.DESCANSO.number_of_days>0:
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if worked_days.DESCANSO:
    if ((payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days) > 0:
        result= categories.BASIC / ((payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days)
    else:
        result=payslip.sal_diario
else:
    result_qty= worked_days.DESCANSO
    if ((payslip.date_to - payslip.date_from).days + 1 ) > 0:
        result= categories.BASIC / ((payslip.date_to - payslip.date_from).days + 1 )
    else:
        result=payslip.sal_diario</field>
            <field name="name">DIA DE DESCANSO</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">DDES</field>
            <field name="sequence" eval="12"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_653_07d9b30a" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if worked_days.LEAVE90 and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if worked_days.LEAVE90:
    result_qty= worked_days.LEAVE90.number_of_days
result= payslip.sal_diario</field>
            <field name="name">INASISTENCIA</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">INA</field>
            <field name="sequence" eval="13"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_653_07ccb30a" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if worked_days.LEAVE90 and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if worked_days.LEAVE90:
    result_qty= worked_days.LEAVE90.number_of_days
result= payslip.sal_diario</field>
            <field name="name">INASISTENCIA</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">INA</field>
            <field name="sequence" eval="13"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_654_40979bf4" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if worked_days.REP and worked_days.REP.number_of_days &lt;=3 and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
else:
    result= False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty= worked_days.REP.number_of_days
result= payslip.sal_diario</field>
            <field name="name">REPOSO &lt;3 DIAS ART.73 LOTTT</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">NVREP</field>
            <field name="sequence" eval="7"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_654_aa979bf4" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if worked_days.REP and worked_days.REP.number_of_days &lt;=3 and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
else:
    result= False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty= worked_days.REP.number_of_days
result= payslip.sal_diario</field>
            <field name="name">REPOSO &lt;3 DIAS ART.73 LOTTT</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">NVREP</field>
            <field name="sequence" eval="7"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_655_9d910acd" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_aporte_sso and contract.wage &lt;=(employee.company_id.sal_minimo_ley * 5):
    result = ((((contract.wage * 12)/52)*((employee.company_id.por_aporte_sso / 100)))*payslip.lunes_mes)
elif employee.company_id.por_aporte_sso and contract.wage >(employee.company_id.sal_minimo_ley * 5):
    result = (((((employee.company_id.sal_minimo_ley * 5)* 12)/52)*((employee.company_id.por_aporte_sso / 100)))*payslip.lunes_mes)
else:
    result = False</field>
            <field name="name">S.S.O</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">S.S.O</field>
            <field name="sequence" eval="17"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501010" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_655_9dkl0acd" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_aporte_sso and contract.wage &lt;=(employee.company_id.sal_minimo_ley * 5):
    result = ((((contract.wage * 12)/52)*((employee.company_id.por_aporte_sso / 100)))*payslip.lunes_mes)
elif employee.company_id.por_aporte_sso and contract.wage >(employee.company_id.sal_minimo_ley * 5):
    result = (((((employee.company_id.sal_minimo_ley * 5)* 12)/52)*((employee.company_id.por_aporte_sso / 100)))*payslip.lunes_mes)
else:
    result = False</field>
            <field name="name">S.S.O</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">S.S.O</field>
            <field name="sequence" eval="17"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501010" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_656_25ee1e12" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_empleado_rpe and payslip.sal_mensual &lt;(10*employee.company_id.sal_minimo_ley):
    result = ((((contract.wage * 12)/52)*((employee.company_id.por_empleado_rpe / 100)))*payslip.lunes_mes)
elif employee.company_id.por_empleado_rpe and payslip.sal_mensual>(10*employee.company_id.sal_minimo_ley):
    result = (((((employee.company_id.sal_minimo_ley * 10) * 12)/52)*((employee.company_id.por_empleado_rpe / 100)))*payslip.lunes_mes)
else:
    result = False</field>
            <field name="name">R.P.E</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">R.P.E</field>
            <field name="sequence" eval="18"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501011" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_656_05ee1e92" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_empleado_rpe and payslip.sal_mensual &lt;(10*employee.company_id.sal_minimo_ley):
    result = ((((contract.wage * 12)/52)*((employee.company_id.por_empleado_rpe / 100)))*payslip.lunes_mes)
elif employee.company_id.por_empleado_rpe and payslip.sal_mensual>(10*employee.company_id.sal_minimo_ley):
    result = (((((employee.company_id.sal_minimo_ley * 10) * 12)/52)*((employee.company_id.por_empleado_rpe / 100)))*payslip.lunes_mes)
else:
    result = False</field>
            <field name="name">R.P.E</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">R.P.E</field>
            <field name="sequence" eval="18"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501011" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_657_8133e3dc" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_empleado_lph:
    result = (contract.wage * (employee.company_id.por_empleado_lph / 100)) / 30 * ((payslip.date_to - payslip.date_from).days + 1)
else:
    result = False</field>
            <field name="name">F.A.O.V.</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">F.A.O.V.</field>
            <field name="sequence" eval="15"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501012" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_657_ll33e3dc" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_empleado_lph:
    result = (contract.wage * (employee.company_id.por_empleado_lph / 100)) / 30 * ((payslip.date_to - payslip.date_from).days + 1)
else:
    result = False</field>
            <field name="name">F.A.O.V.</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">F.A.O.V.</field>
            <field name="sequence" eval="15"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501012" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_658_8a948595" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_riesgo:
    result = ((((contract.wage * 12)/52)*((employee.company_id.por_riesgo / 100)))*payslip.lunes_mes)
else:
    result = False</field>
            <field name="name">S.S.O EMPRESA</field>
            <field name="category_id" ref="hr_payroll.COMP"/>
            <field name="code">SSO-EMPRESA</field>
            <field name="sequence" eval="21"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210402001" />
            <field name="account_debit" ref="eu_reglas_salariales.account_activa_account_57115541403" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_658_8a9ag595" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_riesgo:
    result = ((((contract.wage * 12)/52)*((employee.company_id.por_riesgo / 100)))*payslip.lunes_mes)
else:
    result = False</field>
            <field name="name">S.S.O EMPRESA</field>
            <field name="category_id" ref="hr_payroll.COMP"/>
            <field name="code">SSO-EMPRESA</field>
            <field name="sequence" eval="21"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210402001" />
            <field name="account_debit" ref="eu_reglas_salariales.account_activa_account_57115541403" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_659_a7e76c82" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_empresa_lph:
    result = (contract.wage * (employee.company_id.por_empresa_lph / 100) )
else:
    result = False</field>
            <field name="name">F.A.O.V. EMPRESA</field>
            <field name="category_id" ref="hr_payroll.COMP"/>
            <field name="code">F.A.O.V.-EMPRESA</field>
            <field name="sequence" eval="22"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210402003" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_659_a7et6c82" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_empresa_lph:
    result = (contract.wage * (employee.company_id.por_empresa_lph / 100) )
else:
    result = False</field>
            <field name="name">F.A.O.V. EMPRESA</field>
            <field name="category_id" ref="hr_payroll.COMP"/>
            <field name="code">F.A.O.V.-EMPRESA</field>
            <field name="sequence" eval="22"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210402003" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_660_b70305f0" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_empresa_rpe:
    result = ((((contract.wage * 12)/52)*((employee.company_id.por_empresa_rpe / 100)))*payslip.lunes_mes)
else:
    result = False</field>
            <field name="name">R.P.E EMPRESA</field>
            <field name="category_id" ref="hr_payroll.COMP"/>
            <field name="code">RPE-EMPRESA</field>
            <field name="sequence" eval="23"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210402002" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_660_b7ff05f0" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_empresa_rpe:
    result = ((((contract.wage * 12)/52)*((employee.company_id.por_empresa_rpe / 100)))*payslip.lunes_mes)
else:
    result = False</field>
            <field name="name">R.P.E EMPRESA</field>
            <field name="category_id" ref="hr_payroll.COMP"/>
            <field name="code">RPE-EMPRESA</field>
            <field name="sequence" eval="23"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210402002" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_661_5fb5ae81" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_empresa_lph:
    result = ((contract.wage / 30) * (employee.company_id.por_empresa_lph / 100) * ((payslip.date_to - payslip.date_from).days+1))
else:
    result = False</field>
            <field name="name">INCES EMPRESA</field>
            <field name="category_id" ref="hr_payroll.COMP"/>
            <field name="code">INCES_EMPRESA</field>
            <field name="sequence" eval="24"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210402004" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_661_5fb5lk81" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_empresa_lph:
    result = ((contract.wage / 30) * (employee.company_id.por_empresa_lph / 100) * ((payslip.date_to - payslip.date_from).days+1))
else:
    result = False</field>
            <field name="name">INCES EMPRESA</field>
            <field name="category_id" ref="hr_payroll.COMP"/>
            <field name="code">INCES_EMPRESA</field>
            <field name="sequence" eval="24"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210402004" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_644_966ab019" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if worked_days.FN_LAB:
    result_qty= ((payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days - worked_days.FN_LAB.number_of_days)
elif worked_days.LEAVE120:
    result_qty= (payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days - worked_days.LEAVE120.number_of_days
elif worked_days.P_REM:
    result_qty= (payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days - worked_days.P_REM.number_of_days
elif worked_days.REP:
    result_qty= (payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days - worked_days.REP.number_of_days
elif worked_days.P_REM and worked_days.LEAVE120:
    result_qty= (payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days - worked_days.P_REM.number_of_days - worked_days.LEAVE120.number_of_days
elif worked_days.P_REM and worked_days.LEAVE120 and worked_days.REP:
    result_qty= (payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days - worked_days.P_REM.number_of_days - worked_days.LEAVE120.number_of_days - worked_days.REP.number_of_days
elif worked_days.P_REM and worked_days.REP:
    result_qty= (payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days - worked_days.P_REM.number_of_days - worked_days.REP.number_of_days
elif worked_days.LEAVE120 and worked_days.REP:
    result_qty= (payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days - worked_days.LEAVE120.number_of_days - worked_days.REP.number_of_days
else:
    result_qty= ((payslip.date_to - payslip.date_from).days + 1) - worked_days.DESCANSO.number_of_days
result= contract.wage / 30 </field>
            <field name="name">DIAS HABILES LABORADOS</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">SU</field>
            <field name="sequence" eval="1"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_644_ff6ab0k9" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if worked_days.FN_LAB:
    result_qty= ((payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days - worked_days.FN_LAB.number_of_days)
elif worked_days.LEAVE120:
    result_qty= (payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days - worked_days.LEAVE120.number_of_days
elif worked_days.P_REM:
    result_qty= (payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days - worked_days.P_REM.number_of_days
elif worked_days.REP:
    result_qty= (payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days - worked_days.REP.number_of_days
elif worked_days.P_REM and worked_days.LEAVE120:
    result_qty= (payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days - worked_days.P_REM.number_of_days - worked_days.LEAVE120.number_of_days
elif worked_days.P_REM and worked_days.LEAVE120 and worked_days.REP:
    result_qty= (payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days - worked_days.P_REM.number_of_days - worked_days.LEAVE120.number_of_days - worked_days.REP.number_of_days
elif worked_days.P_REM and worked_days.REP:
    result_qty= (payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days - worked_days.P_REM.number_of_days - worked_days.REP.number_of_days
elif worked_days.LEAVE120 and worked_days.REP:
    result_qty= (payslip.date_to - payslip.date_from).days + 1 - worked_days.DESCANSO.number_of_days - worked_days.LEAVE120.number_of_days - worked_days.REP.number_of_days
else:
    result_qty= ((payslip.date_to - payslip.date_from).days + 1) - worked_days.DESCANSO.number_of_days
result= contract.wage / 30 </field>
            <field name="name">DIAS HABILES LABORADOS</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">SU</field>
            <field name="sequence" eval="1"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_645_2d0feea5" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if worked_days.WDLL and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_empresa_lph:
    result = ((contract.wage / 30) * (employee.company_id.por_empresa_lph / 100) * ((payslip.date_to - payslip.date_from).days+1))
else:
    result = False</field>
            <field name="name">DIA FERIADO O DESCANSO LABORADO</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">DDL</field>
            <field name="sequence" eval="5"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_645_2d0fbea5" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if worked_days.WDLL and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if employee.company_id.por_empresa_lph:
    result = ((contract.wage / 30) * (employee.company_id.por_empresa_lph / 100) * ((payslip.date_to - payslip.date_from).days+1))
else:
    result = False</field>
            <field name="name">DIA FERIADO O DESCANSO LABORADO</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">DDL</field>
            <field name="sequence" eval="5"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>
        
        <record id="hr_salary_rule_646_b504d970" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if worked_days.FN_LAB and worked_days.FN_LAB.number_of_days>0 and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if worked_days.FN_LAB:
    result_qty= worked_days.FN_LAB.number_of_days
    result = (payslip.sal_diario)
else:
    result_qty= worked_days.FN_LAB
    result = (payslip.sal_diario)</field>
            <field name="name">FERIADO NO LABORADO</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">FN_LAB</field>
            <field name="sequence" eval="9"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_646_b504d9fc" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if worked_days.FN_LAB and worked_days.FN_LAB.number_of_days>0 and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if worked_days.FN_LAB:
    result_qty= worked_days.FN_LAB.number_of_days
    result = (payslip.sal_diario)
else:
    result_qty= worked_days.FN_LAB
    result = (payslip.sal_diario)</field>
            <field name="name">FERIADO NO LABORADO</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">FN_LAB</field>
            <field name="sequence" eval="9"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_649_2546bb00" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.hours_exday>0 and payslip.hours_exnight>0 and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if payslip.hours_exday>0 and payslip.hours_exnight>0:
    result_qty= payslip.hours_exday + payslip.hours_exnight 
    result= (payslip.sal_diario / 8 * payslip.hours_exday * 1.5) + (payslip.sal_diario / 8 * payslip.hours_exnight * 1.8)
elif payslip.hours_exday>0and payslip.hours_exnight &lt;1:
    result_qty= payslip.hours_exday
    result= (contract.wage / 30) / 8 * 1.5
else:
    result_qty= payslip.hours_exnight
result= (contract.wage / 30) / 8 * 1.8</field>
            <field name="name">BONIFICACION ESPECIAL</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">bon</field>
            <field name="sequence" eval="8"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_649_aa46bb00" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.hours_exday>0 and payslip.hours_exnight>0 and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
else:
    result=False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if payslip.hours_exday>0 and payslip.hours_exnight>0:
    result_qty= payslip.hours_exday + payslip.hours_exnight 
    result= (payslip.sal_diario / 8 * payslip.hours_exday * 1.5) + (payslip.sal_diario / 8 * payslip.hours_exnight * 1.8)
elif payslip.hours_exday>0and payslip.hours_exnight &lt;1:
    result_qty= payslip.hours_exday
    result= (contract.wage / 30) / 8 * 1.5
else:
    result_qty= payslip.hours_exnight
result= (contract.wage / 30) / 8 * 1.8</field>
            <field name="name">BONIFICACION ESPECIAL</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">bon</field>
            <field name="sequence" eval="8"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_126_2546bb11" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.hours_exday > 0 and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if payslip.hours_exday >0:
    result= ((contract.wage / 30) / 8 * 1.5) * payslip.hours_exday
else:
    result= False</field>
            <field name="name">HORAS EXTRAS DIURNAS</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">HE_D</field>
            <field name="sequence" eval="3"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_126_2546kk11" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.hours_exday > 0 and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if payslip.hours_exday >0:
    result= ((contract.wage / 30) / 8 * 1.5) * payslip.hours_exday
else:
    result= False</field>
            <field name="name">HORAS EXTRAS DIURNAS</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">HE_D</field>
            <field name="sequence" eval="3"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_285_a5b6bb00" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if worked_days.DF_LA > 0 and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result= True
else:
    result= False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty= worked_days.DF_LAB.number_of_days
result= payslip.sal_diario</field>
            <field name="name">DIA ADICIONAL</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">D_ADIC</field>
            <field name="sequence" eval="2"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_285_jjb6bb00" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if worked_days.DF_LA > 0 and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result= True
else:
    result= False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty= worked_days.DF_LAB.number_of_days
result= payslip.sal_diario</field>
            <field name="name">DIA ADICIONAL</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">D_ADIC</field>
            <field name="sequence" eval="2"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_385_b5b6ac00" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.wage>= (5 * employee.company_id.sal_minimo_ley) and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result= True
else:
    result= False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result= (((((5 * employee.company_id.sal_minimo_ley)*12)/52)*((employee.company_id.por_aporte_sso / 100)))*payslip.lunes_mes)</field>
            <field name="name">S.S.O</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">SSO_VARIABLE</field>
            <field name="sequence" eval="19"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501010" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_385_ffb6ac00" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.wage>= (5 * employee.company_id.sal_minimo_ley) and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result= True
else:
    result= False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result= (((((5 * employee.company_id.sal_minimo_ley)*12)/52)*((employee.company_id.por_aporte_sso / 100)))*payslip.lunes_mes)</field>
            <field name="name">S.S.O</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">SSO_VARIABLE</field>
            <field name="sequence" eval="19"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501010" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_201_b5b6aa0f" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.ret_judicial_check and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if contract.ret_judicial_check and contract.ret_judicial_value>0: 
    result = ((contract.wage * contract.ret_judicial_value)/100)
else:
    result = False</field>
            <field name="name">RET.TRIBUNAL DE MENORES</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">RET_TRIB_M</field>
            <field name="sequence" eval="26"/>
            <field name="account_credit" ref="eu_reglas_salariales.account_activa_account_21231720097" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_201_05b6aa0f" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.ret_judicial_check and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if contract.ret_judicial_check and contract.ret_judicial_value>0: 
    result = ((contract.wage * contract.ret_judicial_value)/100)
else:
    result = False</field>
            <field name="name">RET.TRIBUNAL DE MENORES</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">RET_TRIB_M</field>
            <field name="sequence" eval="26"/>
            <field name="account_credit" ref="eu_reglas_salariales.account_activa_account_21231720097" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_126_2546bj11" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.hours_exnight >0 and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result= True
else:
    result= False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if payslip.hours_exnight >0:
    result= ((contract.wage / 30) / 8 * 1.8) * payslip.hours_exnight
else:
    result= False</field>
            <field name="name">HORAS EXTRAS NOCTURNAS</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">HE_N</field>
            <field name="sequence" eval="6"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_126_ba46bj11" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.hours_exnight >0 and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result= True
else:
    result= False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if payslip.hours_exnight >0:
    result= ((contract.wage / 30) / 8 * 1.8) * payslip.hours_exnight
else:
    result= False</field>
            <field name="name">HORAS EXTRAS NOCTURNAS</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">HE_N</field>
            <field name="sequence" eval="6"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_124_2546bk11" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if inputs.FINAN and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    if inputs.FINAN.amount>0:
        result = True
    else:
        result = False
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if inputs.FINAN:
    if inputs.FINAN.amount>0:
        result = inputs.FINAN.amount
    else:
        result = False
else:
    result = False</field>
            <field name="name">Prestamo</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">PRESTAMO</field>
            <field name="sequence" eval="14"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_124_ff46bk11" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if inputs.FINAN and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    if inputs.FINAN.amount>0:
        result = True
    else:
        result = False
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if inputs.FINAN:
    if inputs.FINAN.amount>0:
        result = inputs.FINAN.amount
    else:
        result = False
else:
    result = False</field>
            <field name="name">Prestamo</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">PRESTAMO</field>
            <field name="sequence" eval="14"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_289_2d46bk11" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.islr_withholding_check and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if contract.islr_withholding_check and contract.islr_withholding_value>0: 
    result = ((categories.BASIC * contract.islr_withholding_value)/100)
else:
    result = False</field>
            <field name="name">ISLR</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">I.S.L.R.</field>
            <field name="sequence" eval="25"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210303001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_289_2d46bk1g" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.islr_withholding_check and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result = True
else:
    result = False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if contract.islr_withholding_check and contract.islr_withholding_value>0: 
    result = ((categories.BASIC * contract.islr_withholding_value)/100)
else:
    result = False</field>
            <field name="name">ISLR</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">I.S.L.R.</field>
            <field name="sequence" eval="25"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210303001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_292_0d46bc11" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.reposo_33_check and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result= True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty= worked_days.REP.number_of_days
result= payslip.sal_diario * (33.33 / 100)</field>
            <field name="name">IMDEMNIZACION INCAP.TEMP.ART.73 LOTTT 33,33%</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">NV_RSSO33</field>
            <field name="sequence" eval="10"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_292_0d46bc21" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.reposo_33_check and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result= True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result_qty= worked_days.REP.number_of_days
result= payslip.sal_diario * (33.33 / 100)</field>
            <field name="name">IMDEMNIZACION INCAP.TEMP.ART.73 LOTTT 33,33%</field>
            <field name="category_id" ref="hr_payroll.BASIC"/>
            <field name="code">NV_RSSO33</field>
            <field name="sequence" eval="10"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_520101001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>


        <record id="hr_salary_rule_294_6ca6bc01" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.wage>= (5 * employee.company_id.sal_minimo_ley) and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result= True
else:
    result= False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result= (((((5*employee.company_id.sal_minimo_ley)*12)/52)*((employee.company_id.por_aporte_sso / 100)))*payslip.lunes_mes)</field>
            <field name="name">S.S.O VARIABLE</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">SSO_V</field>
            <field name="sequence" eval="15"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501010" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_294_6fa6bc01" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.wage>= (5 * employee.company_id.sal_minimo_ley) and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result= True
else:
    result= False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result= (((((5*employee.company_id.sal_minimo_ley)*12)/52)*((employee.company_id.por_aporte_sso / 100)))*payslip.lunes_mes)</field>
            <field name="name">S.S.O VARIABLE</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="code">SSO_V</field>
            <field name="sequence" eval="15"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501010" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_281_6ca6cc09" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">slip=employee.slip_ids.filtered(lambda x: x.date_to.month==payslip.date_from.month and not x.is_vacation and not x.is_utility and not x.is_anihilation and x.type_struct_category in ['normal','especial'])
if slip and employee.category_ids.filtered(lambda x: x.name.upper()=='GASTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">slip=employee.slip_ids.filtered(lambda x: x.date_to.month==payslip.date_from.month and not x.is_vacation and not x.is_utility and not x.is_anihilation and x.type_struct_category in ['normal','especial'])
sal=sum(sum(y.total for y in x.line_ids.filtered(lambda line: line.category_id.code == 'BASIC')) for x in slip)
result= sal</field>
            <field name="name">Salario IVSS</field>
            <field name="category_id" ref="hr_payroll.NET"/>
            <field name="code">SIVSS</field>
            <field name="sequence" eval="16"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501010" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>

        <record id="hr_salary_rule_281_1ca6fc09" model="hr.salary.rule">
            <field name="condition_select">python</field>
            <field name="condition_python">slip=employee.slip_ids.filtered(lambda x: x.date_to.month==payslip.date_from.month and not x.is_vacation and not x.is_utility and not x.is_anihilation and x.type_struct_category in ['normal','especial'])
if slip and employee.category_ids.filtered(lambda x: x.name.upper()=='COSTO'):
    result=True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">slip=employee.slip_ids.filtered(lambda x: x.date_to.month==payslip.date_from.month and not x.is_vacation and not x.is_utility and not x.is_anihilation and x.type_struct_category in ['normal','especial'])
sal=sum(sum(y.total for y in x.line_ids.filtered(lambda line: line.category_id.code == 'BASIC')) for x in slip)
result= sal</field>
            <field name="name">Salario IVSS</field>
            <field name="category_id" ref="hr_payroll.NET"/>
            <field name="code">SIVSS</field>
            <field name="sequence" eval="16"/>
            <field name="account_credit" ref="l10n_ve_account_SH.account_activa_account_210501010" />
            <field name="account_debit" ref="l10n_ve_account_SH.account_activa_account_210501001" />
            <field name="struct_id" ref="eu_estructura_nomina_quincenal"/>
        </record>
    </data>
</odoo>